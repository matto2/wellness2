---
import { Image } from "astro:assets";

interface Props {
  images: {
    src: any;
    alt: string;
  }[];
  maxWidth?: string;
}

const { images, maxWidth = "420px" } = Astro.props;
---

<div
  class="mx-auto px-4 xl:px-0 mb-12"
  style="max-width: 384px; max-height: 504px;"
>
  <div
    class="relative w-full aspect-[3/4] rounded-[24px] overflow-hidden"
    style="max-height: 504px;"
  >
    {
      images.map((image, index) => (
        <div
          class="absolute inset-0 transition-opacity duration-1000"
          style={`opacity: ${index === 0 ? 1 : 0};`}
          data-slide={index}
        >
          <Image
            src={image.src}
            alt={image.alt}
            class="w-full h-full object-cover"
            style="max-height: 504px;"
          />
        </div>
      ))
    }
  </div>
  <div class="flex justify-center gap-4 mt-4">
    <button
      class="p-2 rounded-full bg-[#e7eae3] hover:bg-amber-700 hover:text-white transition-colors"
      id="prevButton"
      aria-label="Previous slide"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M15 19l-7-7 7-7"></path>
      </svg>
    </button>
    <button
      class="p-2 rounded-full bg-[#e7eae3] hover:bg-amber-700 hover:text-white transition-colors"
      id="playPauseButton"
      aria-label="Play/Pause slideshow"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
    </button>
    <button
      class="p-2 rounded-full bg-[#e7eae3] hover:bg-amber-700 hover:text-white transition-colors"
      id="nextButton"
      aria-label="Next slide"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M9 5l7 7-7 7"></path>
      </svg>
    </button>
  </div>
</div>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    let currentSlide = 0;
    const slides = document.querySelectorAll("[data-slide]");
    const totalSlides = slides.length;
    let intervalId = null;

    function showSlide(index) {
      slides.forEach((slide) => {
        slide.style.opacity = "0";
      });
      slides[index].style.opacity = "1";
    }

    function nextSlide() {
      currentSlide = (currentSlide + 1) % totalSlides;
      showSlide(currentSlide);
    }

    function prevSlide() {
      currentSlide = (currentSlide - 1 + totalSlides) % totalSlides;
      showSlide(currentSlide);
    }

    function startSlideshow() {
      if (!intervalId) {
        intervalId = setInterval(nextSlide, 5000);
      }
    }

    function stopSlideshow() {
      if (intervalId) {
        clearInterval(intervalId);
        intervalId = null;
      }
    }

    function togglePlayPause() {
      const playPauseButton = document.getElementById("playPauseButton");
      if (!playPauseButton) return;

      if (intervalId) {
        stopSlideshow();
        playPauseButton.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
        `;
      } else {
        startSlideshow();
        playPauseButton.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 4h4v16H6zm8 0h4v16h-4z" />
          </svg>
        `;
      }
    }

    // Get button elements
    const prevButton = document.getElementById("prevButton");
    const nextButton = document.getElementById("nextButton");
    const playPauseButton = document.getElementById("playPauseButton");

    // Add event listeners
    prevButton?.addEventListener("click", () => {
      prevSlide();
      stopSlideshow();
      startSlideshow();
    });

    nextButton?.addEventListener("click", () => {
      nextSlide();
      stopSlideshow();
      startSlideshow();
    });

    playPauseButton?.addEventListener("click", togglePlayPause);

    // Start the slideshow
    startSlideshow();
  });
</script>
